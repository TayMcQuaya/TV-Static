/* RESET */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  html, body {
    width: 100%;
    height: 100%;
    font-family: sans-serif;
    overflow: hidden;
    background: #000; /* fallback if the image doesn't load */
  }
  
  /*
    SCENE BACKGROUND:
    Replaces fractal/noise with your dark wall image.
    Adjust the path to your actual image location.
  */
  .scene {
    position: relative;
    width: 100%;
    height: 100%;
    background: url("grunge-wall.jpg") center/cover no-repeat;
    /* 
      Optional: If you want it even darker, 
      add an overlay like so:
      background: 
        linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.7)), 
        url("assets/dark-wall.jpg") center/cover no-repeat;
    */
  }
  
  /*
    TV container, casing, screen, etc.
    (Unchanged from your existing code)
  */
  .tv-container {
    position: absolute;
    top: 50%; left: 50%;
    transform: translate(-50%, -50%);
    width: 1360px;
    height: 860px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .tv-casing {
    position: relative;
    width: 100%;
    height: 100%;
    border-radius: 20px;
    background: linear-gradient(135deg, #525252, #2a2a2a 40%, #1b1b1b 70%, #444 100%);
    border: 10px solid #222;
    box-shadow:
      0 0 100px rgba(0, 0, 0, 0.7),
      inset 0 0 80px rgba(0, 0, 0, 0.8),
      0 0 60px rgba(0, 0, 0, 0.6);
    overflow: hidden;
  }
  .tv-casing::before {
    content: "";
    position: absolute;
    left: 5%;
    right: 5%;
    top: 15%;
    height: 2px;
    background: rgba(255, 255, 255, 0.03);
  }
  
  .tv-screen {
    position: absolute;
    top: 40px;
    left: 40px;
    right: 40px;
    bottom: 100px; 
    background: #000;
    border: 6px solid #111;
    border-radius: 10px;
    box-shadow: inset 0 0 30px rgba(0, 0, 0, 0.8);
    overflow: hidden;
  }
  .tv-screen::before {
    content: "";
    display: block;
    padding-top: calc(720 / 1280 * 100%);
  }
  .screen-inner {
    position: absolute;
    top: 0; 
    left: 0;
    width: 100%; 
    height: 100%;
  }
  .reflection {
    position: absolute;
    inset: 0;
    pointer-events: none;
    background: linear-gradient(130deg, rgba(255,255,255,0.03) 10%, transparent 90%);
    z-index: 1;
  }
  .scanlines {
    position: absolute;
    inset: 0;
    pointer-events: none;
    background: repeating-linear-gradient(
      0deg,
      rgba(255, 255, 255, 0.05) 0px,
      rgba(255, 255, 255, 0.05) 1px,
      transparent 1px,
      transparent 2px
    );
    z-index: 2;
    opacity: 0.18;
  }
  .static {
    position: absolute;
    inset: 0;
    pointer-events: none;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 300 300' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' fill='white' filter='url(%23noise)' opacity='0.5'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-size: 300% 300%;
    background-position: 50% 50%;
    animation: staticAnimation 0.5s steps(10, end) infinite;
    z-index: 3;
  }
  @keyframes staticAnimation {
    0%   { background-position: 50% 50%; }
    10%  { background-position: 45% 45%; }
    20%  { background-position: 55% 55%; }
    30%  { background-position: 48% 52%; }
    40%  { background-position: 52% 48%; }
    50%  { background-position: 45% 50%; }
    60%  { background-position: 55% 50%; }
    70%  { background-position: 50% 45%; }
    80%  { background-position: 50% 55%; }
    90%  { background-position: 52% 52%; }
    100% { background-position: 50% 50%; }
  }
  .screen-content {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #fff;
    font-size: 2rem;
    z-index: 4;
    text-shadow: 0 0 10px rgba(0,0,0,0.8);
  }
  
  .tv-bottom-panel {
    position: absolute;
    left: 40px;
    right: 40px;
    bottom: 20px;
    height: 60px;
    background: linear-gradient(to bottom, #1f1f1f, #050505);
    border: 2px solid #111;
    border-radius: 4px;
    box-shadow: inset 0 0 10px rgba(0,0,0,0.8);
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 20px;
  }
  .speaker {
    flex: 1;
    height: 30px;
    background: repeating-linear-gradient(
      to right,
      #111 0px,
      #111 3px,
      #222 3px,
      #222 6px
    );
    border: 1px solid #444;
    margin-right: 20px;
    box-shadow: inset 0 0 5px rgba(0,0,0,0.8);
  }
  .knobs {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  .knob, .power-knob {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: linear-gradient(145deg, #595959, #2c2c2c);
    border: 1px solid #111;
    box-shadow: inset 0 0 5px rgba(0,0,0,0.7);
    position: relative;
    cursor: pointer;
    transition: transform 0.2s;
  }
  .knob:hover, .power-knob:hover {
    transform: scale(1.1);
  }
  .knob:active, .power-knob:active {
    transform: scale(0.95);
  }
  .led {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    transform: translate(-50%, -50%);
    background: red;
    box-shadow: 0 0 5px rgba(255,0,0,0.6);
  }
  .led--on {
    background: #1fa51f;
    box-shadow: 0 0 5px rgba(0,255,0,0.6);
  }
  